# Generated from morse.g4 by ANTLR 4.9.3
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO



def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2K")
        buf.write("\u018c\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\4.")
        buf.write("\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64")
        buf.write("\t\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:")
        buf.write("\4;\t;\4<\t<\4=\t=\4>\t>\4?\t?\4@\t@\4A\tA\4B\tB\4C\t")
        buf.write("C\4D\tD\4E\tE\4F\tF\4G\tG\4H\tH\4I\tI\4J\tJ\3\2\3\2\3")
        buf.write("\3\3\3\3\4\3\4\3\5\3\5\3\6\3\6\3\7\3\7\3\b\3\b\3\t\3\t")
        buf.write("\3\n\3\n\3\13\3\13\3\f\3\f\3\r\3\r\3\16\3\16\3\17\3\17")
        buf.write("\3\20\3\20\3\21\3\21\3\22\3\22\3\23\3\23\3\24\3\24\3\25")
        buf.write("\3\25\3\26\3\26\3\27\3\27\3\30\3\30\3\31\3\31\3\32\3\32")
        buf.write("\3\33\3\33\3\34\3\34\3\35\3\35\3\36\3\36\3\37\3\37\3 ")
        buf.write("\3 \3!\3!\3\"\3\"\3#\3#\3$\3$\3%\3%\3&\3&\3&\3\'\3\'\3")
        buf.write("\'\3\'\3\'\3(\3(\3(\3(\3(\3)\3)\3)\3)\3*\3*\3+\3+\3+\3")
        buf.write("+\3+\3,\3,\3,\3,\3-\3-\3-\3-\3-\3.\3.\3.\3/\3/\3/\3/\3")
        buf.write("/\3\60\3\60\3\60\3\60\3\61\3\61\3\61\3\61\3\61\3\62\3")
        buf.write("\62\3\62\3\63\3\63\3\63\3\64\3\64\3\64\3\64\3\65\3\65")
        buf.write("\3\65\3\65\3\65\3\66\3\66\3\66\3\66\3\66\3\67\3\67\3\67")
        buf.write("\3\67\38\38\38\38\39\39\3:\3:\3:\3:\3;\3;\3;\3;\3;\3<")
        buf.write("\3<\3<\3<\3=\3=\3=\3=\3=\3>\3>\3>\3>\3>\3?\3?\3?\3?\3")
        buf.write("?\3@\3@\3@\3@\3@\3@\3A\3A\3A\3A\3A\3A\3B\3B\3B\3B\3B\3")
        buf.write("B\3C\3C\3C\3C\3C\3C\3D\3D\3D\3D\3D\3D\3E\3E\3E\3E\3E\3")
        buf.write("E\3F\3F\3F\3F\3F\3F\3G\3G\3G\3G\3G\3G\3H\3H\3H\3H\3H\3")
        buf.write("H\3I\3I\3I\3I\3I\3I\3J\6J\u0187\nJ\rJ\16J\u0188\3J\3J")
        buf.write("\2\2K\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27")
        buf.write("\r\31\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30")
        buf.write("/\31\61\32\63\33\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'")
        buf.write("M(O)Q*S+U,W-Y.[/]\60_\61a\62c\63e\64g\65i\66k\67m8o9q")
        buf.write(":s;u<w=y>{?}@\177A\u0081B\u0083C\u0085D\u0087E\u0089F")
        buf.write("\u008bG\u008dH\u008fI\u0091J\u0093K\3\2\3\5\2\13\f\17")
        buf.write("\17\"\"\2\u018c\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2")
        buf.write("\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21")
        buf.write("\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3")
        buf.write("\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2")
        buf.write("\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2")
        buf.write("\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2")
        buf.write("\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2")
        buf.write("\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3")
        buf.write("\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q")
        buf.write("\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2")
        buf.write("[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2")
        buf.write("\2e\3\2\2\2\2g\3\2\2\2\2i\3\2\2\2\2k\3\2\2\2\2m\3\2\2")
        buf.write("\2\2o\3\2\2\2\2q\3\2\2\2\2s\3\2\2\2\2u\3\2\2\2\2w\3\2")
        buf.write("\2\2\2y\3\2\2\2\2{\3\2\2\2\2}\3\2\2\2\2\177\3\2\2\2\2")
        buf.write("\u0081\3\2\2\2\2\u0083\3\2\2\2\2\u0085\3\2\2\2\2\u0087")
        buf.write("\3\2\2\2\2\u0089\3\2\2\2\2\u008b\3\2\2\2\2\u008d\3\2\2")
        buf.write("\2\2\u008f\3\2\2\2\2\u0091\3\2\2\2\2\u0093\3\2\2\2\3\u0095")
        buf.write("\3\2\2\2\5\u0097\3\2\2\2\7\u0099\3\2\2\2\t\u009b\3\2\2")
        buf.write("\2\13\u009d\3\2\2\2\r\u009f\3\2\2\2\17\u00a1\3\2\2\2\21")
        buf.write("\u00a3\3\2\2\2\23\u00a5\3\2\2\2\25\u00a7\3\2\2\2\27\u00a9")
        buf.write("\3\2\2\2\31\u00ab\3\2\2\2\33\u00ad\3\2\2\2\35\u00af\3")
        buf.write("\2\2\2\37\u00b1\3\2\2\2!\u00b3\3\2\2\2#\u00b5\3\2\2\2")
        buf.write("%\u00b7\3\2\2\2\'\u00b9\3\2\2\2)\u00bb\3\2\2\2+\u00bd")
        buf.write("\3\2\2\2-\u00bf\3\2\2\2/\u00c1\3\2\2\2\61\u00c3\3\2\2")
        buf.write("\2\63\u00c5\3\2\2\2\65\u00c7\3\2\2\2\67\u00c9\3\2\2\2")
        buf.write("9\u00cb\3\2\2\2;\u00cd\3\2\2\2=\u00cf\3\2\2\2?\u00d1\3")
        buf.write("\2\2\2A\u00d3\3\2\2\2C\u00d5\3\2\2\2E\u00d7\3\2\2\2G\u00d9")
        buf.write("\3\2\2\2I\u00db\3\2\2\2K\u00dd\3\2\2\2M\u00e0\3\2\2\2")
        buf.write("O\u00e5\3\2\2\2Q\u00ea\3\2\2\2S\u00ee\3\2\2\2U\u00f0\3")
        buf.write("\2\2\2W\u00f5\3\2\2\2Y\u00f9\3\2\2\2[\u00fe\3\2\2\2]\u0101")
        buf.write("\3\2\2\2_\u0106\3\2\2\2a\u010a\3\2\2\2c\u010f\3\2\2\2")
        buf.write("e\u0112\3\2\2\2g\u0115\3\2\2\2i\u0119\3\2\2\2k\u011e\3")
        buf.write("\2\2\2m\u0123\3\2\2\2o\u0127\3\2\2\2q\u012b\3\2\2\2s\u012d")
        buf.write("\3\2\2\2u\u0131\3\2\2\2w\u0136\3\2\2\2y\u013a\3\2\2\2")
        buf.write("{\u013f\3\2\2\2}\u0144\3\2\2\2\177\u0149\3\2\2\2\u0081")
        buf.write("\u014f\3\2\2\2\u0083\u0155\3\2\2\2\u0085\u015b\3\2\2\2")
        buf.write("\u0087\u0161\3\2\2\2\u0089\u0167\3\2\2\2\u008b\u016d\3")
        buf.write("\2\2\2\u008d\u0173\3\2\2\2\u008f\u0179\3\2\2\2\u0091\u017f")
        buf.write("\3\2\2\2\u0093\u0186\3\2\2\2\u0095\u0096\7C\2\2\u0096")
        buf.write("\4\3\2\2\2\u0097\u0098\7D\2\2\u0098\6\3\2\2\2\u0099\u009a")
        buf.write("\7E\2\2\u009a\b\3\2\2\2\u009b\u009c\7F\2\2\u009c\n\3\2")
        buf.write("\2\2\u009d\u009e\7G\2\2\u009e\f\3\2\2\2\u009f\u00a0\7")
        buf.write("H\2\2\u00a0\16\3\2\2\2\u00a1\u00a2\7I\2\2\u00a2\20\3\2")
        buf.write("\2\2\u00a3\u00a4\7J\2\2\u00a4\22\3\2\2\2\u00a5\u00a6\7")
        buf.write("K\2\2\u00a6\24\3\2\2\2\u00a7\u00a8\7L\2\2\u00a8\26\3\2")
        buf.write("\2\2\u00a9\u00aa\7M\2\2\u00aa\30\3\2\2\2\u00ab\u00ac\7")
        buf.write("N\2\2\u00ac\32\3\2\2\2\u00ad\u00ae\7O\2\2\u00ae\34\3\2")
        buf.write("\2\2\u00af\u00b0\7P\2\2\u00b0\36\3\2\2\2\u00b1\u00b2\7")
        buf.write("Q\2\2\u00b2 \3\2\2\2\u00b3\u00b4\7R\2\2\u00b4\"\3\2\2")
        buf.write("\2\u00b5\u00b6\7S\2\2\u00b6$\3\2\2\2\u00b7\u00b8\7T\2")
        buf.write("\2\u00b8&\3\2\2\2\u00b9\u00ba\7U\2\2\u00ba(\3\2\2\2\u00bb")
        buf.write("\u00bc\7V\2\2\u00bc*\3\2\2\2\u00bd\u00be\7W\2\2\u00be")
        buf.write(",\3\2\2\2\u00bf\u00c0\7X\2\2\u00c0.\3\2\2\2\u00c1\u00c2")
        buf.write("\7Y\2\2\u00c2\60\3\2\2\2\u00c3\u00c4\7Z\2\2\u00c4\62\3")
        buf.write("\2\2\2\u00c5\u00c6\7[\2\2\u00c6\64\3\2\2\2\u00c7\u00c8")
        buf.write("\7\\\2\2\u00c8\66\3\2\2\2\u00c9\u00ca\7\62\2\2\u00ca8")
        buf.write("\3\2\2\2\u00cb\u00cc\7\63\2\2\u00cc:\3\2\2\2\u00cd\u00ce")
        buf.write("\7\64\2\2\u00ce<\3\2\2\2\u00cf\u00d0\7\65\2\2\u00d0>\3")
        buf.write("\2\2\2\u00d1\u00d2\7\66\2\2\u00d2@\3\2\2\2\u00d3\u00d4")
        buf.write("\7\67\2\2\u00d4B\3\2\2\2\u00d5\u00d6\78\2\2\u00d6D\3\2")
        buf.write("\2\2\u00d7\u00d8\79\2\2\u00d8F\3\2\2\2\u00d9\u00da\7:")
        buf.write("\2\2\u00daH\3\2\2\2\u00db\u00dc\7;\2\2\u00dcJ\3\2\2\2")
        buf.write("\u00dd\u00de\7\60\2\2\u00de\u00df\7/\2\2\u00dfL\3\2\2")
        buf.write("\2\u00e0\u00e1\7/\2\2\u00e1\u00e2\7\60\2\2\u00e2\u00e3")
        buf.write("\7\60\2\2\u00e3\u00e4\7\60\2\2\u00e4N\3\2\2\2\u00e5\u00e6")
        buf.write("\7/\2\2\u00e6\u00e7\7\60\2\2\u00e7\u00e8\7/\2\2\u00e8")
        buf.write("\u00e9\7\60\2\2\u00e9P\3\2\2\2\u00ea\u00eb\7/\2\2\u00eb")
        buf.write("\u00ec\7\60\2\2\u00ec\u00ed\7\60\2\2\u00edR\3\2\2\2\u00ee")
        buf.write("\u00ef\7\60\2\2\u00efT\3\2\2\2\u00f0\u00f1\7\60\2\2\u00f1")
        buf.write("\u00f2\7\60\2\2\u00f2\u00f3\7/\2\2\u00f3\u00f4\7\60\2")
        buf.write("\2\u00f4V\3\2\2\2\u00f5\u00f6\7/\2\2\u00f6\u00f7\7/\2")
        buf.write("\2\u00f7\u00f8\7\60\2\2\u00f8X\3\2\2\2\u00f9\u00fa\7\60")
        buf.write("\2\2\u00fa\u00fb\7\60\2\2\u00fb\u00fc\7\60\2\2\u00fc\u00fd")
        buf.write("\7\60\2\2\u00fdZ\3\2\2\2\u00fe\u00ff\7\60\2\2\u00ff\u0100")
        buf.write("\7\60\2\2\u0100\\\3\2\2\2\u0101\u0102\7\60\2\2\u0102\u0103")
        buf.write("\7/\2\2\u0103\u0104\7/\2\2\u0104\u0105\7/\2\2\u0105^\3")
        buf.write("\2\2\2\u0106\u0107\7/\2\2\u0107\u0108\7\60\2\2\u0108\u0109")
        buf.write("\7/\2\2\u0109`\3\2\2\2\u010a\u010b\7\60\2\2\u010b\u010c")
        buf.write("\7/\2\2\u010c\u010d\7\60\2\2\u010d\u010e\7\60\2\2\u010e")
        buf.write("b\3\2\2\2\u010f\u0110\7/\2\2\u0110\u0111\7/\2\2\u0111")
        buf.write("d\3\2\2\2\u0112\u0113\7/\2\2\u0113\u0114\7\60\2\2\u0114")
        buf.write("f\3\2\2\2\u0115\u0116\7/\2\2\u0116\u0117\7/\2\2\u0117")
        buf.write("\u0118\7/\2\2\u0118h\3\2\2\2\u0119\u011a\7\60\2\2\u011a")
        buf.write("\u011b\7/\2\2\u011b\u011c\7/\2\2\u011c\u011d\7\60\2\2")
        buf.write("\u011dj\3\2\2\2\u011e\u011f\7/\2\2\u011f\u0120\7/\2\2")
        buf.write("\u0120\u0121\7\60\2\2\u0121\u0122\7/\2\2\u0122l\3\2\2")
        buf.write("\2\u0123\u0124\7\60\2\2\u0124\u0125\7/\2\2\u0125\u0126")
        buf.write("\7\60\2\2\u0126n\3\2\2\2\u0127\u0128\7\60\2\2\u0128\u0129")
        buf.write("\7\60\2\2\u0129\u012a\7\60\2\2\u012ap\3\2\2\2\u012b\u012c")
        buf.write("\7/\2\2\u012cr\3\2\2\2\u012d\u012e\7\60\2\2\u012e\u012f")
        buf.write("\7\60\2\2\u012f\u0130\7/\2\2\u0130t\3\2\2\2\u0131\u0132")
        buf.write("\7\60\2\2\u0132\u0133\7\60\2\2\u0133\u0134\7\60\2\2\u0134")
        buf.write("\u0135\7/\2\2\u0135v\3\2\2\2\u0136\u0137\7\60\2\2\u0137")
        buf.write("\u0138\7/\2\2\u0138\u0139\7/\2\2\u0139x\3\2\2\2\u013a")
        buf.write("\u013b\7/\2\2\u013b\u013c\7\60\2\2\u013c\u013d\7\60\2")
        buf.write("\2\u013d\u013e\7/\2\2\u013ez\3\2\2\2\u013f\u0140\7/\2")
        buf.write("\2\u0140\u0141\7\60\2\2\u0141\u0142\7/\2\2\u0142\u0143")
        buf.write("\7/\2\2\u0143|\3\2\2\2\u0144\u0145\7/\2\2\u0145\u0146")
        buf.write("\7/\2\2\u0146\u0147\7\60\2\2\u0147\u0148\7\60\2\2\u0148")
        buf.write("~\3\2\2\2\u0149\u014a\7/\2\2\u014a\u014b\7/\2\2\u014b")
        buf.write("\u014c\7/\2\2\u014c\u014d\7/\2\2\u014d\u014e\7/\2\2\u014e")
        buf.write("\u0080\3\2\2\2\u014f\u0150\7\60\2\2\u0150\u0151\7/\2\2")
        buf.write("\u0151\u0152\7/\2\2\u0152\u0153\7/\2\2\u0153\u0154\7/")
        buf.write("\2\2\u0154\u0082\3\2\2\2\u0155\u0156\7\60\2\2\u0156\u0157")
        buf.write("\7\60\2\2\u0157\u0158\7/\2\2\u0158\u0159\7/\2\2\u0159")
        buf.write("\u015a\7/\2\2\u015a\u0084\3\2\2\2\u015b\u015c\7\60\2\2")
        buf.write("\u015c\u015d\7\60\2\2\u015d\u015e\7\60\2\2\u015e\u015f")
        buf.write("\7/\2\2\u015f\u0160\7/\2\2\u0160\u0086\3\2\2\2\u0161\u0162")
        buf.write("\7\60\2\2\u0162\u0163\7\60\2\2\u0163\u0164\7\60\2\2\u0164")
        buf.write("\u0165\7\60\2\2\u0165\u0166\7/\2\2\u0166\u0088\3\2\2\2")
        buf.write("\u0167\u0168\7\60\2\2\u0168\u0169\7\60\2\2\u0169\u016a")
        buf.write("\7\60\2\2\u016a\u016b\7\60\2\2\u016b\u016c\7\60\2\2\u016c")
        buf.write("\u008a\3\2\2\2\u016d\u016e\7/\2\2\u016e\u016f\7\60\2\2")
        buf.write("\u016f\u0170\7\60\2\2\u0170\u0171\7\60\2\2\u0171\u0172")
        buf.write("\7\60\2\2\u0172\u008c\3\2\2\2\u0173\u0174\7/\2\2\u0174")
        buf.write("\u0175\7/\2\2\u0175\u0176\7\60\2\2\u0176\u0177\7\60\2")
        buf.write("\2\u0177\u0178\7\60\2\2\u0178\u008e\3\2\2\2\u0179\u017a")
        buf.write("\7/\2\2\u017a\u017b\7/\2\2\u017b\u017c\7/\2\2\u017c\u017d")
        buf.write("\7\60\2\2\u017d\u017e\7\60\2\2\u017e\u0090\3\2\2\2\u017f")
        buf.write("\u0180\7/\2\2\u0180\u0181\7/\2\2\u0181\u0182\7/\2\2\u0182")
        buf.write("\u0183\7/\2\2\u0183\u0184\7\60\2\2\u0184\u0092\3\2\2\2")
        buf.write("\u0185\u0187\t\2\2\2\u0186\u0185\3\2\2\2\u0187\u0188\3")
        buf.write("\2\2\2\u0188\u0186\3\2\2\2\u0188\u0189\3\2\2\2\u0189\u018a")
        buf.write("\3\2\2\2\u018a\u018b\bJ\2\2\u018b\u0094\3\2\2\2\4\2\u0188")
        buf.write("\3\b\2\2")
        return buf.getvalue()


class morseLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    T__31 = 32
    T__32 = 33
    T__33 = 34
    T__34 = 35
    T__35 = 36
    A = 37
    B = 38
    C = 39
    D = 40
    E = 41
    F = 42
    G = 43
    H = 44
    I = 45
    J = 46
    K = 47
    L = 48
    M = 49
    N = 50
    O = 51
    P = 52
    Q = 53
    R = 54
    S = 55
    T = 56
    U = 57
    V = 58
    W = 59
    X = 60
    Y = 61
    Z = 62
    ZERO = 63
    ONE = 64
    TWO = 65
    THREE = 66
    FOUR = 67
    FIVE = 68
    SIX = 69
    SEVEN = 70
    EIGHT = 71
    NINE = 72
    WS = 73

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'A'", "'B'", "'C'", "'D'", "'E'", "'F'", "'G'", "'H'", "'I'", 
            "'J'", "'K'", "'L'", "'M'", "'N'", "'O'", "'P'", "'Q'", "'R'", 
            "'S'", "'T'", "'U'", "'V'", "'W'", "'X'", "'Y'", "'Z'", "'0'", 
            "'1'", "'2'", "'3'", "'4'", "'5'", "'6'", "'7'", "'8'", "'9'", 
            "'.-'", "'-...'", "'-.-.'", "'-..'", "'.'", "'..-.'", "'--.'", 
            "'....'", "'..'", "'.---'", "'-.-'", "'.-..'", "'--'", "'-.'", 
            "'---'", "'.--.'", "'--.-'", "'.-.'", "'...'", "'-'", "'..-'", 
            "'...-'", "'.--'", "'-..-'", "'-.--'", "'--..'", "'-----'", 
            "'.----'", "'..---'", "'...--'", "'....-'", "'.....'", "'-....'", 
            "'--...'", "'---..'", "'----.'" ]

    symbolicNames = [ "<INVALID>",
            "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", 
            "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", 
            "Y", "Z", "ZERO", "ONE", "TWO", "THREE", "FOUR", "FIVE", "SIX", 
            "SEVEN", "EIGHT", "NINE", "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", 
                  "T__32", "T__33", "T__34", "T__35", "A", "B", "C", "D", 
                  "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", 
                  "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", 
                  "ZERO", "ONE", "TWO", "THREE", "FOUR", "FIVE", "SIX", 
                  "SEVEN", "EIGHT", "NINE", "WS" ]

    grammarFileName = "morse.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.9.3")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


